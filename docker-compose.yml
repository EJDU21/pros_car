version: '3.7'

services:
  car_writer:
    container_name : writer
    image: ghcr.io/otischung/pros_car:latest
    stdin_open: false
    tty: false
    env_file:
      - .env
#    environment:
#      - ROS_DOMAIN_ID
#      - SERIAL_DEV_DEFAULT
#      - SERIAL_FRONT_DEFAULT
#      - SERIAL_LIDAR_DEFAULT
    networks:
      - my_bridge_network
    # privileged: true
    devices:
      - "/dev/usb_lidar:/dev/usb_lidar"
      - "/dev/usb_front_wheel:/dev/usb_front_wheel"
      - "/dev/usb_rear_wheel:/dev/usb_rear_wheel"
    command: tail -f /dev/null
  
  car_keyboard:
    container_name: reader
    image: ghcr.io/otischung/pros_car:latest
    stdin_open: true  # docker run -i
    tty: true         # docker run -t
    env_file:
      - .env
    networks:
      - my_bridge_network
    # privileged: true
    devices:
      - "/dev/usb_lidar:/dev/usb_lidar"
      - "/dev/usb_front_wheel:/dev/usb_front_wheel"
      - "/dev/usb_rear_wheel:/dev/usb_rear_wheel"
    command: tail -f /dev/null

  car_AI:
    container_name : car_AI
    image: pytorch_ros2:0.0.0 
    stdin_open: true
    tty: true
    env_file:
      - .env
    volumes:
      - ./AI_pkg:/AI_pkg
    runtime: nvidia
    networks:
      - my_bridge_network
    command: tail -f /dev/null

networks:
  my_bridge_network:
    driver: bridge
